#!/bin/sh

# Print every Command being executed
set -x

# Define "losetup" Executable
LOSETUP_BIN="losetup"                                                                 # Production (IMPORTANT: on the Real System it is /usr/sbin/losetup, in the initramfs it is /usr/bin/losetup !!!) - "losetup" also works correctly though
#LOSETUP_BIN="/usr/src/initramfs-investigation/6.8.0-40-generic/main/usr/bin/losetup" # Testing with uncompressed initramfs

# Add new Line
echo -e "\n"

# Echo
echo "Setting up Loop Devices based on /etc/looptab"

if [ -f "/etc/looptab" ]
then
	# Read Configuration File (exclude Comment Lines)
	value=`cat /etc/looptab | grep -vE "^#"`
else
	# Error
	echo "ERROR: File /etc/looptab does NOT exist. Exiting."
        exit 9
fi

# Create /dev/loop Folder
if [ ! -d "/dev/loop" ]
then
    mkdir -p "/dev/loop"
fi

# Initialize Counter
loopDeviceCounter=0

# Iterate over each Device
cat /etc/looptab | grep -vE "^#" | while IFS= read -r line;
do
    # Echo
    echo "Processing Line: $line"

    # Extract "ID"
    loopDeviceNumber=`echo "$line" | cut -f1 -d'	'`

    # Extract "Source" Device
    sourceDevice=`echo "$line" | cut -f2 -d'	'`

    # Extract "Loop" Device with Custom Name
    loopDeviceCustomName=`echo "$line" | cut -f3 -d'	'`

    # Build "Standardized" Device Path
    loopDevicePath="/dev/loop$loopDeviceNumber"

    # Create Loop Device (OLD SCHOOL - NOT NEEDED ANYMORE)
    #mknod -m650 $loopDevice b 7 $loopDeviceCounter

    # Ensure Correct Permissions (OLD SCHOOL - NOT NEEDED ANYMORE)
    #chown root:disk $loopDeviceCustomName

    # Check if Device Exists
    if [ -b $sourceDevice ]
    then
        # Echo
        echo "Executing Command: ${LOSETUP_BIN} $loopDevicePath $sourceDevice"

        # Check Status of Loop Device /dev/loopX to see if already mounted
        checkStatus=`${LOSETUP_BIN} $loopDevicePath`

        # Error code 0: Device exists and is initialized, code != 0 (e.g. 1): Device is not initialized
        loopDeviceStatusCode=$?

        if [ $loopDeviceStatusCode -eq 0 ]
        then
            # Echo
            echo "Device $loopDevicePath is already used. Details: $checkStatus"
            echo "Removing Device $loopDevicePath before Re-Initializing it"

            # Remove Device
            ${LOSETUP_BIN} -d $loopDevicePath

            # Sleep a bit
            sleep 1
        fi

        # Mount Source Device to Loop Device (OLD SCHOOL - NOT NEEDED ANYMORE TO SPECIFY LOOP DEVICE ITSELF)
        losetup $loopDevicePath $sourceDevice

        # Check if Symlink already exists - If it already exists, delete the old Symlink
        if [ -L $loopDeviceCustomName ]
        then
            # Echo
            echo "Symlink $loopDeviceCustomName already exists. Deleting it before recreating it."

            # Remove Existing Link
            rm $loopDeviceCustomName
        fi

        # Echo
        echo "Create Symlink $loopDeviceCustomName pointing to $loopDevicePath"

        # (Re)Create a Symlink for more Convenience in /dev/loop/ Subfolder
        ln -s $loopDevicePath $loopDeviceCustomName

        # Not supported by the "losetup" initramfs executable (it doesn't recognize "--show" Option)

        # Echo
        #echo "Executing Command: losetup -f --show $sourceDevice"

        # Mount Source Device to Loop Device (NEW METHOD - Use First Available Device e.g. /dev/loop0)
        #loopDeviceAuto=`losetup -f --show $sourceDevice`
        #loopDeviceAuto=`losetup -f $sourceDevice`

        # Create Symlink in /dev/loop/ Subfolder
        #ln -s $loopDeviceAuto $loopDeviceCustomName

        # Increase Counter
        loopDeviceCounter=$((loopDeviceCounter+1))
    else
        # Echo
        echo "Source Device $sourceDevice does NOT exist and/or is NOT a Block Device"
    fi

    # Wait a bit
    sleep 1
done

# Return OK Code
exit 0
